<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[icps]]></title>
  <link href="http://icps0610.github.io/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2016-11-17T21:45:39+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Datepicker]]></title>
    <link href="http://icps0610.github.io/blog/2016/11/17/datepicker/"/>
    <updated>2016-11-17T21:03:30+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/11/17/datepicker</id>
    <content type="html"><![CDATA[<h3><a href="https://github.com/Nerian/bootstrap-datepicker-rails">bootstrap-datepicker</a></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;bootstrap-datepicker-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_tag items_path, method: :get do %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">text_field_tag</span> <span class="ss">:q</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">placeholder</span><span class="p">:</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">localtime</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%m/%d/%Y&quot;</span><span class="p">),</span> <span class="s1">&#39;data-provide&#39;</span><span class="ss">:&#39;datepicker&#39;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= submit_tag %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Watir]]></title>
    <link href="http://icps0610.github.io/blog/2016/11/12/watir/"/>
    <updated>2016-11-12T16:06:53+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/11/12/watir</id>
    <content type="html"><![CDATA[<h4>msg</h4>

<pre><code>/var/lib/gems/2.3.0/gems/selenium-webdriver-3.0.1/lib/selenium/webdriver/firefox.rb:58:in `driver_path':     
Unable to find Mozilla geckodriver. Please download the server from        https://github.com/mozilla/geckodriver/releases and place it
somewhere on your PATH. More info at https://developer.mozilla.org/en-US/docs/Mozilla/QA/Marionette/WebDriver. (Selenium::WebDriver::Error::WebDriverError)
</pre>


<p></code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>download https://github.com/mozilla/geckodriver/releases
</span><span class='line'>export PATH=$PATH:/path/to/geckodriver</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ping_lan2]]></title>
    <link href="http://icps0610.github.io/blog/2016/08/24/ping-lan2/"/>
    <updated>2016-08-24T00:36:40+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/08/24/ping-lan2</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">SETLOCAL</span> ENABLEDELAYEDEXPANSION
</span><span class='line'><span class="k">for</span> <span class="n">/l</span> <span class="nv">%%i</span> in (<span class="m">1</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">254</span>) <span class="k">do</span> (
</span><span class='line'>   ping -n <span class="m">1</span> -w <span class="m">1</span> <span class="m">192</span>.<span class="m">168</span>.<span class="m">0</span>.<span class="nv">%%i</span> <span class="p">&gt;</span> <span class="n">nul</span>
</span><span class='line'>  <span class="k">if</span> !<span class="k">errorlevel</span>! <span class="o">==</span> <span class="m">0</span> (
</span><span class='line'>      <span class="k">echo</span> <span class="m">192</span>.<span class="m">168</span>.<span class="m">0</span>.<span class="nv">%%i</span> O
</span><span class='line'>  ) <span class="k">else</span> (
</span><span class='line'>      <span class="k">echo</span> <span class="m">192</span>.<span class="m">168</span>.<span class="m">0</span>.<span class="nv">%%i</span> X
</span><span class='line'>  )
</span><span class='line'>)
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bat'><span class='line'><span class="p">@</span><span class="k">echo</span> <span class="k">off</span>
</span><span class='line'><span class="k">SETLOCAL</span> ENABLEDELAYEDEXPANSION
</span><span class='line'><span class="k">FOR</span> <span class="n">/F</span> <span class="nv">%%i</span> in (ip.txt) <span class="k">do</span> (
</span><span class='line'>   ping -n <span class="m">1</span> -w <span class="m">1</span> <span class="nv">%%i</span> <span class="p">&gt;</span> <span class="n">nul</span>
</span><span class='line'>  <span class="k">if</span> !<span class="k">errorlevel</span>! <span class="o">==</span> <span class="m">0</span> (
</span><span class='line'>      <span class="k">echo</span> <span class="nv">%%i</span> O
</span><span class='line'>  ) <span class="k">else</span> (
</span><span class='line'>      <span class="k">echo</span> <span class="nv">%%i</span> X
</span><span class='line'>  )
</span><span class='line'>)
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stack_level_too_deep]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/30/stack-level-too-deep/"/>
    <updated>2016-07-30T21:04:56+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/30/stack-level-too-deep</id>
    <content type="html"><![CDATA[<p>stack level too deep</p>

<p>export RUBY_THREAD_VM_STACK_SIZE=999999</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[File_list]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/26/file-list/"/>
    <updated>2016-07-26T19:20:57+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/26/file-list</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># `find test  -type f | xargs ls`.split(&quot;\n&quot;)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">dir</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>  <span class="n">file</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="o">==</span> <span class="kp">true</span>
</span><span class='line'>      <span class="n">file</span><span class="o">=</span><span class="sb">`ls </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">f</span><span class="o">+</span><span class="s2">&quot;</span><span class="se">\\</span><span class="s2">&quot;</span><span class="o">+</span><span class="n">i</span><span class="p">}</span>
</span><span class='line'>      <span class="n">dir</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="sb">`ls </span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;rm </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;touch </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">target</span><span class="o">=</span><span class="s2">&quot;D:</span><span class="se">\\</span><span class="s2">Thunder</span><span class="se">\\</span><span class="s2">XLGameBox</span><span class="se">\\</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">file</span><span class="o">=</span><span class="sb">`ls </span><span class="si">#{</span><span class="n">target</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">target</span><span class="o">+</span><span class="n">i</span><span class="p">}</span>
</span><span class='line'><span class="n">dir</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[因數分解]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/11/factor/"/>
    <updated>2016-07-11T13:09:39+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/11/factor</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">factor</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">f</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="n">result</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="p">(</span><span class="ow">not</span> <span class="n">result</span> <span class="o">==</span> <span class="s2">&quot;&quot;</span> <span class="ow">and</span> <span class="n">f</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="n">chop</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">n</span><span class="o">%</span><span class="n">f</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="n">result</span><span class="o">+=</span><span class="n">f</span><span class="o">.</span><span class="n">to_s</span><span class="o">+</span><span class="s2">&quot;×&quot;</span>
</span><span class='line'>    <span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="n">f</span><span class="p">)</span><span class="o">%</span><span class="n">f</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">factor</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="n">f</span><span class="p">,</span><span class="n">f</span><span class="p">,</span><span class="n">result</span><span class="p">)</span> <span class="p">:</span> <span class="n">factor</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="n">f</span><span class="p">,</span><span class="n">f</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">result</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">factor</span><span class="p">(</span><span class="n">n</span><span class="p">,</span><span class="n">f</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">result</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">reorganize</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">#Array項目內重複次數</span>
</span><span class='line'>  <span class="n">repeat</span><span class="o">=</span><span class="n">n</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;×&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">each_with_object</span><span class="p">(</span><span class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">)){</span><span class="o">|</span><span class="n">m</span><span class="p">,</span><span class="n">h</span><span class="o">|</span><span class="n">h</span><span class="o">[</span><span class="n">m</span><span class="o">]+=</span> <span class="mi">1</span><span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">repeat</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">x</span><span class="si">}</span><span class="s2">**</span><span class="si">#{</span><span class="n">y</span><span class="si">}</span><span class="s2"> × &quot;</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="o">.</span><span class="n">chop</span><span class="o">.</span><span class="n">chop</span><span class="o">.</span><span class="n">chop</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">num</span> <span class="o">=</span> <span class="mi">29475</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">factor</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">reorganize</span><span class="p">(</span><span class="n">factor</span><span class="p">(</span><span class="n">num</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 3×3×5×5×131</span>
</span><span class='line'><span class="c1"># 3**2 × 5**2 × 131**1</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LAN掃描]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/09/arp-scan/"/>
    <updated>2016-07-09T02:52:13+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/09/arp-scan</id>
    <content type="html"><![CDATA[<p><code>netdiscover</code></p>

<p><code>arp-scan 192.168.1.0/24</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ping_log]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/08/ping/"/>
    <updated>2016-07-08T16:10:15+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/08/ping</id>
    <content type="html"><![CDATA[<p><img src="http://icps0610.github.io/images/ping.png" alt="ping.png" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;colorize&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;/data/ruby/chinese_num/chinese_num.rb&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">restore</span><span class="p">(</span><span class="n">where</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@break</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>    <span class="sb">`espeak -vzh &#39;</span><span class="si">#{</span><span class="n">where</span><span class="si">}</span><span class="sb">恢復&#39; -s 250`</span>
</span><span class='line'>    <span class="vi">@break</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">record</span><span class="p">(</span><span class="n">time</span><span class="p">)</span>
</span><span class='line'>  <span class="sb">`echo </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%H:%M:%S&quot;</span><span class="p">)</span><span class="si">}</span><span class="sb">, </span><span class="si">#{</span><span class="n">time</span><span class="si">}</span><span class="sb"> &gt;&gt; /tmp/ping.log`</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">delay</span><span class="p">(</span><span class="n">ip</span><span class="p">,</span><span class="n">where</span><span class="p">,</span><span class="n">alert</span><span class="p">)</span>
</span><span class='line'>  <span class="n">time</span> <span class="o">=</span> <span class="sb">`ping </span><span class="si">#{</span><span class="n">ip</span><span class="si">}</span><span class="sb"> -c 1 | awk &#39;{print $7}&#39; | grep time`</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/time=(.*)/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">time</span> <span class="o">==</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'>    <span class="sb">`espeak -vzh &#39;</span><span class="si">#{</span><span class="n">where</span><span class="si">}</span><span class="sb">斷線&#39; -s 250`</span>
</span><span class='line'>    <span class="n">record</span><span class="p">(</span><span class="o">-</span><span class="mi">10000</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@break</span><span class="o">=</span><span class="mi">1</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="n">time</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">blue</span><span class="o">+</span><span class="s2">&quot;   &quot;</span><span class="o">+</span><span class="n">ip</span>
</span><span class='line'>    <span class="n">record</span><span class="p">(</span><span class="n">time</span><span class="p">)</span>
</span><span class='line'>    <span class="n">restore</span><span class="p">(</span><span class="n">where</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">time</span> <span class="o">&gt;</span> <span class="n">alert</span>
</span><span class='line'>      <span class="sb">`espeak -vzh &#39;</span><span class="si">#{</span><span class="n">where</span><span class="si">}</span><span class="sb">延遲</span><span class="si">#{</span><span class="no">Chinese_num</span><span class="o">.</span><span class="n">transform</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">to_i</span><span class="p">)</span><span class="si">}</span><span class="sb">秒&#39; -s 250`</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">gnuplot</span>
</span><span class='line'>  <span class="n">tmp</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">binread</span><span class="p">(</span><span class="s2">&quot;/tmp/ping.log&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">count</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>  <span class="n">count</span> <span class="o">=</span> <span class="mi">256</span> <span class="k">if</span> <span class="n">count</span> <span class="o">&lt;</span> <span class="mi">256</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">log_start</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(.*),.*/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'>  <span class="n">log_end</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(.*),.*/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">file</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set grid y&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set yrange [0:]&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set ylabel &#39;ms&#39;&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set xdata time&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set timefmt &#39;%H:%M:%S&#39;&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set xrange [&#39;</span><span class="si">#{</span><span class="n">log_start</span><span class="si">}</span><span class="s2">&#39;:&#39;</span><span class="si">#{</span><span class="n">log_end</span><span class="si">}</span><span class="s2">&#39;]&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set format x &#39;%H:%M:%S&#39;&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set xlabel &#39;</span><span class="si">#{</span><span class="n">log_start</span><span class="si">}</span><span class="s2"> ~ </span><span class="si">#{</span><span class="n">log_end</span><span class="si">}</span><span class="s2">&#39;&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set xtics 3600&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set terminal png size </span><span class="si">#{</span><span class="n">count</span><span class="o">*</span><span class="mi">5</span><span class="si">}</span><span class="s2">,480&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set output &#39;/tmp/ping.png&#39;&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set border 0&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set style data lines&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;set style line 1 linecolor rgb &#39;#0060ad&#39; linetype 1 linewidth 1&quot;</span>
</span><span class='line'>  <span class="n">file</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;plot &#39;/tmp/ping.log&#39; using 1:2 notitle linestyle 1&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">IO</span><span class="o">.</span><span class="n">binwrite</span><span class="p">(</span><span class="s1">&#39;/tmp/ping.p&#39;</span><span class="p">,</span><span class="n">file</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">+</span><span class="s2">&quot;</span><span class="se">\r\n</span><span class="s2">&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;gnuplot &lt; /tmp/ping.p&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;kill `ps aux | grep /usr/bin/display.im6 | awk &#39;{print $2}&#39;`&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="vi">@break</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="vi">@count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="kp">loop</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gnuplot</span> <span class="k">if</span> <span class="vi">@count</span><span class="o">%</span><span class="mi">120</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">delay</span><span class="p">(</span><span class="s2">&quot;168.95.1.1&quot;</span><span class="p">,</span><span class="s2">&quot;中華電信&quot;</span><span class="p">,</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">sleep</span> <span class="mi">5</span>
</span><span class='line'>  <span class="vi">@count</span><span class="o">+=</span><span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>語音</h4>

<p><code>espeak -vzh '測試'</code>  <a href="http://icps0610.github.io/blog/2016/06/17/espeak/">espeak</a></p>

<h4>繪圖</h4>

<p><code>gnuplot</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中文字形]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/06/tw-font/"/>
    <updated>2016-07-06T19:45:51+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/06/tw-font</id>
    <content type="html"><![CDATA[<p><code>fc-list :lang=zh</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[產生隨機資料]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/06/faker/"/>
    <updated>2016-07-06T11:56:35+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/06/faker</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/stympy/faker">https://github.com/stympy/faker</a></p>

<p><code>gem install faker</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Faker</span><span class="o">::</span><span class="no">Name</span><span class="o">.</span><span class="n">first_name</span>
</span><span class='line'><span class="no">Faker</span><span class="o">::</span><span class="no">Internet</span><span class="o">.</span><span class="n">email</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Atom]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/25/atom/"/>
    <updated>2016-06-25T01:00:23+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/25/atom</id>
    <content type="html"><![CDATA[<h3>package</h3>

<h6>highlight-line 選取那行高亮</h6>

<h6>activate-power-mode 打字特效</h6>

<h6>atom-beautify ruby排版</h6>

<blockquote><p>Could not find &lsquo;rubocop&rsquo;. The program may not be installed.<br/>
<code>gem install rubocop</code><br/>
atom-beautify -> settings -> ruby -> path C:\Ruby23\bin\rubocop</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fcitx]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/21/fcitx/"/>
    <updated>2016-06-21T20:28:06+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/21/fcitx</id>
    <content type="html"><![CDATA[<p><code>add-apt-repository ppa:fcitx-team/nightly</code><br/>
<code>apt-get update</code><br/>
<code>apt install -y fcitx-bin fcitx-libs-gclient fcitx-chewing fcitx-module-dbus fcitx-config-common fcitx-modules fcitx-config-gtk fcitx-module-x11 fcitx-data fcitx-qimpanel-configtool fcitx-frontend-gtk2 fcitx-ui-classic fcitx-frontend-gtk3 fcitx-ui-qimpanel fcitx-libs</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/21/google/"/>
    <updated>2016-06-21T13:16:48+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/21/google</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># encoding: UTF-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Gmap</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">2</span>
</span><span class='line'>      <span class="n">find_A_B</span><span class="p">(</span> <span class="n">find</span><span class="p">(</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="p">,</span> <span class="s2">&quot;A&quot;</span> <span class="p">,</span> <span class="s2">&quot;red&quot;</span> <span class="p">,</span> <span class="mi">18</span><span class="p">)</span> <span class="p">,</span> <span class="n">find</span><span class="p">(</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">,</span> <span class="s2">&quot;B&quot;</span> <span class="p">,</span> <span class="s2">&quot;blue&quot;</span> <span class="p">,</span> <span class="mi">18</span> <span class="p">)</span> <span class="p">)</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">find</span><span class="p">(</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="p">,</span> <span class="s2">&quot;A&quot;</span> <span class="p">,</span> <span class="s2">&quot;red&quot;</span> <span class="p">,</span> <span class="mi">18</span><span class="p">)</span>
</span><span class='line'>      <span class="n">find</span><span class="p">(</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="p">,</span> <span class="s2">&quot;AA&quot;</span> <span class="p">,</span> <span class="s2">&quot;red&quot;</span> <span class="p">,</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>      <span class="sb">`montage /tmp/imageA1.jpg /tmp/imageAA1.jpg -geometry +0+0 all.jpg`</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s1">&#39;input one or two address&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'> <span class="k">def</span> <span class="nf">find</span><span class="p">(</span><span class="n">address</span> <span class="p">,</span> <span class="n">label</span> <span class="p">,</span> <span class="n">color</span> <span class="p">,</span> <span class="n">zoom</span> <span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;downloading..&quot;</span><span class="o">+</span> <span class="n">address</span>
</span><span class='line'>    <span class="n">url</span> <span class="o">=</span> <span class="s2">&quot;http://maps.googleapis.com/maps/api/geocode/json?address=&quot;</span> <span class="o">+</span><span class="n">address</span>
</span><span class='line'>    <span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">HTML</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span> <span class="no">URI</span><span class="o">.</span><span class="n">escape</span><span class="p">(</span><span class="n">url</span><span class="p">)),</span><span class="kp">nil</span><span class="p">,</span><span class="kp">nil</span><span class="p">)</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/location&quot; : {\n.*&quot;lat&quot; : (.*),\n.*&quot;lng&quot; : (.*)/</span><span class="p">)</span>
</span><span class='line'>    <span class="c1">#doc = JSON.parse(Nokogiri::HTML(open( URI.escape(url)),nil,nil).text)[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;]</span>
</span><span class='line'>    <span class="c1">#lat = doc[&quot;lat&quot;]</span>
</span><span class='line'>    <span class="c1">#lng = doc[&quot;lng&quot;]</span>
</span><span class='line'>    <span class="sb">`wget -q </span><span class="se">\&quot;</span><span class="sb">https://maps.googleapis.com/maps/api/staticmap?center=</span><span class="si">#{</span><span class="n">doc</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="sb">,</span><span class="si">#{</span><span class="n">doc</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="si">}</span><span class="sb">&amp;markers=color:</span><span class="si">#{</span><span class="n">color</span><span class="si">}</span><span class="sb">%7Clabel:</span><span class="si">#{</span><span class="n">label</span><span class="si">}</span><span class="sb">%7C</span><span class="si">#{</span><span class="n">doc</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="sb">,</span><span class="si">#{</span><span class="n">doc</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span><span class="si">}</span><span class="sb">&amp;zoom=</span><span class="si">#{</span><span class="n">zoom</span><span class="si">}</span><span class="sb">&amp;size=1024x1024&amp;scale=2&amp;language=zh-tw&amp;maptype=hybrid</span><span class="se">\&quot;</span><span class="sb"> -O /tmp/image</span><span class="si">#{</span><span class="n">label</span><span class="si">}</span><span class="sb">.jpg`</span>
</span><span class='line'>    <span class="sb">`convert /tmp/image</span><span class="si">#{</span><span class="n">label</span><span class="si">}</span><span class="sb">.jpg -bordercolor white -border 5 /tmp/image</span><span class="si">#{</span><span class="n">label</span><span class="si">}</span><span class="sb">1.jpg`</span>
</span><span class='line'>    <span class="k">return</span> <span class="o">[</span> <span class="n">doc</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">,</span> <span class="n">doc</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">find_A_B</span><span class="p">(</span> <span class="n">a</span> <span class="p">,</span> <span class="n">b</span> <span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;downloading..two place&quot;</span>
</span><span class='line'>    <span class="n">cen</span> <span class="o">=</span> <span class="o">[</span> <span class="p">(</span><span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_f</span><span class="o">+</span><span class="n">b</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">to_f</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span> <span class="p">,</span> <span class="p">(</span><span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">to_f</span><span class="o">+</span><span class="n">b</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">to_f</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span> <span class="o">]</span>
</span><span class='line'>    <span class="sb">`wget -q </span><span class="se">\&quot;</span><span class="sb">https://maps.googleapis.com/maps/api/staticmap?center=</span><span class="si">#{</span><span class="n">cen</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="sb">,</span><span class="si">#{</span><span class="n">cen</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="sb">&amp;markers=color:red%7Clabel:A%7C</span><span class="si">#{</span><span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="sb">,</span><span class="si">#{</span><span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="sb">&amp;markers=color:blue%7Clabel:B%7C</span><span class="si">#{</span><span class="n">b</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="sb">,</span><span class="si">#{</span><span class="n">b</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="sb">&amp;size=1024x1024&amp;scale=2&amp;language=zh-tw&amp;maptype=hybrid</span><span class="se">\&quot;</span><span class="sb"> -O /tmp/imageAB.jpg`</span>
</span><span class='line'>    <span class="sb">`convert /tmp/imageAB.jpg -bordercolor white -border 5 /tmp/imageAB1.jpg`</span>
</span><span class='line'>    <span class="sb">`montage /tmp/imageA1.jpg /tmp/imageB1.jpg -tile 1x2 -geometry +0+0 -resize 640x640 /tmp/output.jpg`</span>
</span><span class='line'>    <span class="sb">`montage /tmp/imageAB1.jpg /tmp/output.jpg -geometry +0+0 all.jpg`</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Gmap</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qrcode]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/19/qrcode/"/>
    <updated>2016-06-19T23:54:44+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/19/qrcode</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rqrcode_png&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;mini_magick&quot;</span>
</span><span class='line'><span class="n">text</span><span class="o">=</span><span class="s2">&quot;test&quot;</span>
</span><span class='line'><span class="n">input_image</span><span class="o">=</span><span class="s2">&quot;3.jpg&quot;</span>
</span><span class='line'><span class="c1">#產生Qrcode</span>
</span><span class='line'><span class="n">qr</span> <span class="o">=</span> <span class="no">RQRCode</span><span class="o">::</span><span class="no">QRCode</span><span class="o">.</span><span class="n">new</span><span class="p">(</span> <span class="n">text</span><span class="p">,</span> <span class="ss">:size</span> <span class="o">=&gt;</span> <span class="mi">6</span><span class="p">,</span> <span class="ss">:level</span> <span class="o">=&gt;</span> <span class="ss">:m</span> <span class="p">)</span>
</span><span class='line'><span class="n">png</span> <span class="o">=</span> <span class="n">qr</span><span class="o">.</span><span class="n">to_img</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s2">&quot;qr.png&quot;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#合併照片</span>
</span><span class='line'><span class="n">qr_png</span> <span class="o">=</span> <span class="no">MiniMagick</span><span class="o">::</span><span class="no">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;qr.png&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">image</span> <span class="o">=</span> <span class="no">MiniMagick</span><span class="o">::</span><span class="no">Image</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">input_image</span><span class="p">)</span>
</span><span class='line'><span class="n">image</span><span class="o">.</span><span class="n">resize</span> <span class="s2">&quot;80x80&quot;</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">qr_png</span><span class="o">.</span><span class="n">composite</span><span class="p">(</span><span class="n">image</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class='line'>  <span class="n">c</span><span class="o">.</span><span class="n">compose</span> <span class="s2">&quot;Over&quot;</span>
</span><span class='line'>  <span class="n">c</span><span class="o">.</span><span class="n">geometry</span> <span class="s2">&quot;+</span><span class="si">#{</span><span class="p">((</span><span class="mi">300</span><span class="o">-</span><span class="n">image</span><span class="o">.</span><span class="n">width</span><span class="o">.</span><span class="n">to_i</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">+</span><span class="si">#{</span><span class="p">((</span><span class="mi">300</span><span class="o">-</span><span class="n">image</span><span class="o">.</span><span class="n">height</span><span class="o">.</span><span class="n">to_i</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">result</span><span class="o">.</span><span class="n">write</span> <span class="s2">&quot;qr.jpg&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>換顏色</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="c1">#/usr/local/lib/ruby/gems/2.3.0/gems/rqrcode_png-0.1.5/lib/rqrcode_png/image.rb</span>
</span><span class='line'> <span class="c1">#3 </span>
</span><span class='line'> <span class="no">BLACK</span> <span class="o">=</span> <span class="o">::</span><span class="no">ChunkyPNG</span><span class="o">::</span><span class="no">Color</span><span class="o">.</span><span class="n">rgba</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span><span class="mi">91</span><span class="p">,</span><span class="mi">145</span><span class="p">,</span><span class="mi">255</span><span class="p">)</span> <span class="c1">#pink</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passwd]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/19/passwd/"/>
    <updated>2016-06-19T19:58:56+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/19/passwd</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>O$W96i1ul?hN!tpU@3LY7g24r2Wjhb@*=@uUByEsgdJA]M5r
</span><span class='line'>WEgv2PJ&807{*)e&lt;ERcY43X0Ok)YoSYs/ZRk:cRD!+3a
</span><span class='line'>RTjPN8m,_zUM_,f!7lpj:n2*J+yEg!z@qt66
</span><span class='line'>_?ZaJWFAQ]0=e&gt;J;[!z.37CbY%Z)]b2F]x-&lt;&lt;?msrW2c
</span><span class='line'>[6-O8hj484,tyGoNuzxo7wN)$&VSvFejfpBk43!DW&gt;8b
</span><span class='line'>w!B@.&lt;@;]Tm@] ,dMJ()1x,&lt;&lt;7#c83CQpD{8#s&lt;c^p84
</span><span class='line'>l=&gt;)SV1CKzCX54t{yHEQ0&lt;&b5m 3#/Ke){$BkW2xJ6r4Z&lt;J9N026
</span><span class='line'>PreGqj0p[t$6&ttP)$y7.w&lt;2R40f.= sg4q)hHL1xK1K6Brh&lt;D%5?:3n
</span><span class='line'>vOFVZ^&gt;4aof3gJ:RBfh_2X8lCO0iU;Lwxs$cNfM)tr-=6031
</span><span class='line'>rG;!EvpDNi:74kfkVi2k:hwhO8Bd8V1ZQ*!Zwk4f</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSS]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/18/rss/"/>
    <updated>2016-06-18T20:18:58+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/18/rss</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rss&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;http://www.appledaily.com.tw/rss/newcreate/kind/rnews/type/new&#39;</span>
</span><span class='line'><span class="nb">open</span><span class="p">(</span><span class="n">url</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">rss</span><span class="o">|</span>
</span><span class='line'>  <span class="n">feed</span> <span class="o">=</span> <span class="no">RSS</span><span class="o">::</span><span class="no">Parser</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">rss</span><span class="p">)</span>
</span><span class='line'>  <span class="n">feed</span><span class="o">.</span><span class="n">items</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Title: </span><span class="si">#{</span><span class="n">item</span><span class="o">.</span><span class="n">title</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenSSL-AES256]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/18/openssl-aes256/"/>
    <updated>2016-06-18T20:10:17+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/18/openssl-aes256</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;base64&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">aes_encrypt</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>  <span class="n">cipher</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">AES256</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:CBC</span><span class="p">)</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="n">encrypt</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="no">KEY</span><span class="c1">#cipher.random_key</span>
</span><span class='line'>  <span class="n">cipher</span><span class="o">.</span><span class="n">iv</span> <span class="o">=</span> <span class="no">IV</span><span class="c1">#cipher.random_iV</span>
</span><span class='line'>  <span class="n">encrypt</span> <span class="o">=</span> <span class="n">cipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">data</span><span class="p">)</span> <span class="o">+</span> <span class="n">cipher</span><span class="o">.</span><span class="n">final</span>
</span><span class='line'>  <span class="k">return</span> <span class="no">Base64</span><span class="o">.</span><span class="n">encode64</span><span class="p">(</span><span class="n">encrypt</span><span class="p">)</span><span class="o">.</span><span class="n">chomp</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">aes_decrypt</span><span class="p">(</span><span class="n">encrypt</span><span class="p">)</span>
</span><span class='line'>  <span class="n">encrypt</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">decode64</span><span class="p">(</span><span class="n">encrypt</span><span class="p">)</span>
</span><span class='line'>  <span class="n">decipher</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">Cipher</span><span class="o">::</span><span class="no">AES256</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:CBC</span><span class="p">)</span>
</span><span class='line'>  <span class="n">decipher</span><span class="o">.</span><span class="n">decrypt</span>
</span><span class='line'>  <span class="n">decipher</span><span class="o">.</span><span class="n">key</span> <span class="o">=</span> <span class="no">KEY</span>
</span><span class='line'>  <span class="n">decipher</span><span class="o">.</span><span class="n">iv</span>  <span class="o">=</span> <span class="no">IV</span>
</span><span class='line'>  <span class="n">decrypt</span> <span class="o">=</span> <span class="n">decipher</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">encrypt</span><span class="p">)</span> <span class="o">+</span> <span class="n">decipher</span><span class="o">.</span><span class="n">final</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">decrypt</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bettercap]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/18/bettercap/"/>
    <updated>2016-06-18T14:56:56+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/18/bettercap</id>
    <content type="html"><![CDATA[<p><a href="https://www.bettercap.org/">https://www.bettercap.org/</a>  <br/>
<code>apt-get install libpcap0.8-dev</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ngrok]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/18/ngrok/"/>
    <updated>2016-06-18T05:40:12+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/18/ngrok</id>
    <content type="html"><![CDATA[<p><a href="https://ngrok.com/">https://ngrok.com/</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="sb">`curl -s http://localhost:4040/api/tunnels`</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(http:\/\/\w*\.ngrok\.io)/</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">url</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nat]]></title>
    <link href="http://icps0610.github.io/blog/2016/06/18/nat/"/>
    <updated>2016-06-18T05:38:52+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/06/18/nat</id>
    <content type="html"><![CDATA[<pre><code>iptables --table nat --append POSTROUTING --out-interface <font color='red'>eth1</font> -j MASQUERADE
iptables --append FORWARD --in-interface <font color='red'>eth0</font> -j ACCEPT
echo "1" > /proc/sys/net/ipv4/ip_forward
</code></pre>

]]></content>
  </entry>
  
</feed>
