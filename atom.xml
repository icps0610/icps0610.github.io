<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[icps]]></title>
  <link href="http://icps0610.github.io/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2017-10-25T23:55:20+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Production]]></title>
    <link href="http://icps0610.github.io/blog/2017/10/25/production/"/>
    <updated>2017-10-25T23:51:28+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/10/25/production</id>
    <content type="html"><![CDATA[<p><code>rake secret</code> => config/secrets.yml</p>

<h6>不能使用tab要用space</h6>

<p><code>rake db:create db:migrate RAILS_ENV=production</code>
<code>rake assets:precompile RAILS_ENV=production</code>
<code>rails s -e production -p 80</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firt_user_admin]]></title>
    <link href="http://icps0610.github.io/blog/2017/10/25/firt-user-admin/"/>
    <updated>2017-10-25T23:49:19+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/10/25/firt-user-admin</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#models/user.rb
</span><span class='line'>class User &lt; ApplicationRecord
</span><span class='line'>  after_create :set_admin
</span><span class='line'>
</span><span class='line'>  private
</span><span class='line'>
</span><span class='line'>  def set_admin
</span><span class='line'>   if User.count == 1
</span><span class='line'>     User.first.update_attribute(:power,3)
</span><span class='line'>   else
</span><span class='line'>     return true
</span><span class='line'>   end
</span><span class='line'>
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Execute_sql]]></title>
    <link href="http://icps0610.github.io/blog/2017/10/25/execute-sql/"/>
    <updated>2017-10-25T21:51:05+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/10/25/execute-sql</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>ref <a href="https://stackoverflow.com/questions/15408285/rails-3-execute-custom-sql-query-without-a-model">https://stackoverflow.com/questions/15408285/rails-3-execute-custom-sql-query-without-a-model</a></p></blockquote></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">establish_connection</span><span class="p">({</span><span class="ss">adapter</span><span class="p">:</span> <span class="s1">&#39;mysql2&#39;</span><span class="p">,</span> <span class="ss">encoding</span><span class="p">:</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span> <span class="ss">database</span><span class="p">:</span> <span class="no">DB</span><span class="p">,</span> <span class="ss">username</span><span class="p">:</span> <span class="no">USER</span><span class="p">,</span><span class="ss">password</span><span class="p">:</span> <span class="no">PASSWD</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * from users&quot;</span>
</span><span class='line'><span class="vi">@result</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">);</span>
</span><span class='line'><span class="vi">@result</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="n">r</span><span class="o">[</span><span class="s2">&quot;name&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Argv]]></title>
    <link href="http://icps0610.github.io/blog/2017/10/23/argv/"/>
    <updated>2017-10-23T00:57:04+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/10/23/argv</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>ref <a href="https://mgleon08.github.io/blog/2016/08/30/optionparser/">https://mgleon08.github.io/blog/2016/08/30/optionparser/</a></p></blockquote></blockquote>

<pre><code class="ruby">require 'optparse'
class Help
  def initialize(arguments)
    @arguments = arguments
    @arguments = ["-h"] if @arguments == []
    parse_options
  end

  def parse_options
    options = OptionParser.new
    options.banner = 'Usage: Backup &amp; Restore [options]'
    options.separator ''
    options.separator 'options:'
    options.on('-r', '--backup', 'backup') { backup }
    options.on('-r', '--restroe', 'restroe') { restroe }

    options.on('-h', '--help', 'Show this message') { puts(options); exit }
    options.parse!(@arguments)
  end
 end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Argv]]></title>
    <link href="http://icps0610.github.io/blog/2017/10/22/argv/"/>
    <updated>2017-10-22T21:24:03+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/10/22/argv</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">getopt</span>
</span><span class='line'><span class="c">#args = &quot; &quot; . join(map(lambda s: &#39;&quot;%s&quot;&#39; % s if &#39; &#39; in s else s, sys.argv[2:]))</span>
</span><span class='line'>
</span><span class='line'><span class="n">opts</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="n">getopt</span><span class="o">.</span><span class="n">getopt</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="s">&quot;hm:r:&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">mode</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'><span class="n">rating</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'><span class="k">for</span> <span class="n">op</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">opts</span><span class="p">:</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">op</span> <span class="o">==</span> <span class="s">&quot;-m&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">mode</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>  <span class="k">elif</span> <span class="n">op</span> <span class="o">==</span> <span class="s">&quot;-r&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">rating</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>  <span class="k">else</span><span class="p">:</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;-m mode -r rating&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">mode</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="n">rating</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kill_all_process]]></title>
    <link href="http://icps0610.github.io/blog/2017/09/02/kill-all-process/"/>
    <updated>2017-09-02T19:07:40+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/09/02/kill-all-process</id>
    <content type="html"><![CDATA[<p>pkill -f ngrok</p>

<p><code>ps aux | grep  ngrok | awk '{print "kill -9 " $2}'</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Owncloud]]></title>
    <link href="http://icps0610.github.io/blog/2017/09/02/owncloud/"/>
    <updated>2017-09-02T01:50:27+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/09/02/owncloud</id>
    <content type="html"><![CDATA[<p>php-gd php-zip php-dom</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Maximum Supported Is 2 TiB.]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/31/2t/"/>
    <updated>2017-08-31T22:33:11+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/31/2t</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>ref: <a href="https://www.raspberrypi.org/forums/viewtopic.php?f=28&amp;t=15519">https://www.raspberrypi.org/forums/viewtopic.php?f=28&amp;t=15519</a></p></blockquote></blockquote>

<p><code>apt-get install ntfs-3g</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KODExplorer]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/31/kodexplorer/"/>
    <updated>2017-08-31T22:02:42+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/31/kodexplorer</id>
    <content type="html"><![CDATA[<h3>raspberry pi 3 B</h3>

<h6>apache2</h6>

<p><code>apt-get install apache2 php5 libapache2-mod-php5 php5-gd php5-curl</code><br/>
<code>/etc/init.d/apache2 restart</code></p>

<p><code>git clone https://github.com/kalcaddle/KODExplorer.git</code><br/>
<code>chmod -Rf 777 ./KODExplorer/*</code><br/>
<code>mv KODExplorer /var/www/html</code></p>

<h6>php</h6>

<h6>###找到php.ini</h6>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'> <span class="nb">phpinfo</span><span class="p">();</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h6>###Configuration File (php.ini) Path</h6>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#php.ini
</span><span class='line'>upload_max_filesize = 1000M
</span><span class='line'>post_max_size = 1000M
</span><span class='line'>memory_limit  1000M</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Masscan]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/31/masscan/"/>
    <updated>2017-08-31T20:20:35+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/31/masscan</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[No_ri_no_rdoc]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/21/no-ri-no-rdoc/"/>
    <updated>2017-08-21T20:27:38+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/21/no-ri-no-rdoc</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>ref  <a href="https://stackoverflow.com/questions/1381725/how-to-make-no-ri-no-rdoc-the-default-for-gem-install">https://stackoverflow.com/questions/1381725/how-to-make-no-ri-no-rdoc-the-default-for-gem-install</a></p></blockquote></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ou just add following line to your local ~/.gemrc file (it is in your home folder)
</span><span class='line'>
</span><span class='line'>gem: --no-document or you can add this line to the global gemrc config file. Here is how to find it (in Linux)
</span><span class='line'>
</span><span class='line'>strace gem source 2&gt;&1 | grep gemrc</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two Wods Regex]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/21/ruby-regex/"/>
    <updated>2017-08-21T04:15:41+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/21/ruby-regex</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>ref <a href="https://stackoverflow.com/questions/10678823/regex-format-for-two-strings">https://stackoverflow.com/questions/10678823/regex-format-for-two-strings</a></p></blockquote></blockquote>

<h3></h3>

<p><code>array = ["happy","good"]</code><br/>
<code>p array.map{|s|s.scan(/\b(hppy|good)\b/).join}</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rename去掉中文括弧]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/21/qu-diao-zhong-wen-gua-hu/"/>
    <updated>2017-08-21T02:55:06+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/21/qu-diao-zhong-wen-gua-hu</id>
    <content type="html"><![CDATA[<p><code>rename -n 's/（(.*)）/($1)/'</code> *<br/>
<code>rename -v 's/\s+(.*)/$1/' *</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Id3tool]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/21/id3tool/"/>
    <updated>2017-08-21T02:47:18+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/21/id3tool</id>
    <content type="html"><![CDATA[<p><a href="http://nekohako.xware.cx/id3tool/">http://nekohako.xware.cx/id3tool/</a>
<a href="http://nekohako.xware.cx/id3tool/id3tool-1.2a.tar.gz">http://nekohako.xware.cx/id3tool/id3tool-1.2a.tar.gz</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>usage:
</span><span class='line'>id3tool [&lt;options&gt;] &lt;filename&gt;
</span><span class='line'>  -t, --set-title=WORD          Sets the title to WORD
</span><span class='line'>  -a, --set-album=WORD          Sets the album to WORD
</span><span class='line'>  -r, --set-artist=WORD         Sets the artist to WORD
</span><span class='line'>  -y, --set-year=YEAR           Sets the year to YEAR [4 digits]
</span><span class='line'>  -n, --set-note=WORD           Sets the note to WORD
</span><span class='line'>  -g, --set-genre=INT           Sets the genre code to INT
</span><span class='line'>  -G, --set-genre-word=WORD     Sets the genre to WORD
</span><span class='line'>  -c, --set-track=INT           Sets the track number to INT
</span><span class='line'>  -l, --genre-list              Shows the Genre's and their codes
</span><span class='line'>  -v, --version                 Displays the version
</span><span class='line'>  -h, --help                    Displays this message</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lan]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/19/lan/"/>
    <updated>2017-08-19T05:20:51+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/19/lan</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Lan</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@thread</span> <span class="o">=</span> <span class="mi">30</span>
</span><span class='line'>    <span class="vi">@width</span> <span class="o">=</span> <span class="mi">15</span>
</span><span class='line'>    <span class="vi">@log_file</span> <span class="o">=</span> <span class="s2">&quot;log&quot;</span>
</span><span class='line'>    <span class="vi">@lan</span> <span class="o">=</span> <span class="n">get_lan</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@log</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="vi">@wait</span> <span class="o">=</span> <span class="mi">300</span>
</span><span class='line'>    <span class="vi">@read_log_wait</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@lan</span><span class="si">}</span><span class="s2">0/24&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">read_log</span><span class="o">.</span><span class="n">each_slice</span><span class="p">(</span><span class="vi">@thread</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">list</span><span class="o">|</span>
</span><span class='line'>      <span class="n">threads</span> <span class="o">=</span> <span class="o">[]</span> <span class="p">;</span> <span class="n">line</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>      <span class="n">list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">ip</span><span class="o">|</span>
</span><span class='line'>        <span class="n">threads</span> <span class="o">&lt;&lt;</span> <span class="no">Thread</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="n">line</span> <span class="o">&lt;&lt;</span> <span class="n">error</span><span class="p">(</span> <span class="n">ip</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">threads</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">join</span> <span class="p">}</span>
</span><span class='line'>      <span class="nb">display</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">list</span><span class="p">)</span>
</span><span class='line'>      <span class="n">line</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="p">,</span><span class="n">ip</span><span class="o">|</span> <span class="n">ip</span> <span class="k">if</span> <span class="nb">p</span> <span class="o">==</span> <span class="s2">&quot; ■&quot;</span><span class="p">}</span><span class="o">.</span><span class="n">compact</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">ip</span><span class="o">|</span> <span class="vi">@log</span> <span class="o">&lt;&lt;</span> <span class="n">ip</span> <span class="p">}</span> <span class="k">if</span> <span class="ow">not</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="vi">@log_file</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="vi">@log</span><span class="o">.</span><span class="n">each</span><span class="p">{</span><span class="o">|</span><span class="n">l</span><span class="o">|</span> <span class="sb">`echo </span><span class="si">#{</span><span class="n">l</span><span class="si">}</span><span class="sb"> &gt;&gt; </span><span class="si">#{</span><span class="vi">@log_file</span><span class="si">}</span><span class="sb">`</span><span class="p">}</span> <span class="k">if</span> <span class="ow">not</span> <span class="no">File</span><span class="o">.</span><span class="n">exist?</span> <span class="vi">@log_file</span>
</span><span class='line'>    <span class="nb">puts</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_lan</span>
</span><span class='line'>    <span class="n">ip</span>  <span class="o">=</span> <span class="sb">`ifconfig | grep cast`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/\d+\.\d+\.\d+\.\d+/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'>    <span class="n">lan</span> <span class="o">=</span> <span class="n">ip</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(\d*\.\d*\.\d*\.)\d*/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">read_log</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>      <span class="vi">@wait</span> <span class="o">=</span> <span class="vi">@read_log_wait</span>
</span><span class='line'>      <span class="no">IO</span><span class="o">.</span><span class="n">binread</span><span class="p">(</span><span class="vi">@log_file</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">rescue</span>
</span><span class='line'>      <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">254</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@lan</span><span class="si">}#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">error</span><span class="p">(</span><span class="n">ip</span><span class="p">)</span>
</span><span class='line'>    <span class="sb">`fping </span><span class="si">#{</span><span class="n">ip</span><span class="si">}</span><span class="sb"> -t </span><span class="si">#{</span><span class="vi">@wait</span><span class="si">}</span><span class="sb">`</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;alive&quot;</span><span class="p">)</span> <span class="o">==</span> <span class="kp">nil</span> <span class="p">?</span> <span class="o">[</span><span class="s2">&quot; □&quot;</span><span class="p">,</span> <span class="n">ip</span><span class="o">]</span> <span class="p">:</span>  <span class="o">[</span><span class="s2">&quot; ■&quot;</span><span class="p">,</span> <span class="n">ip</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">display</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">ip</span><span class="p">)</span>
</span><span class='line'>    <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="p">,</span><span class="n">ip</span><span class="o">|[</span><span class="nb">p</span><span class="p">,</span><span class="n">ip</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">[</span><span class="mi">3</span><span class="o">].</span><span class="n">to_i</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">sort_by</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="p">,</span><span class="n">ip</span><span class="o">|</span><span class="n">ip</span><span class="p">}</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="nb">p</span><span class="p">,</span><span class="n">ip</span><span class="o">|[</span><span class="nb">p</span><span class="p">,</span><span class="n">ip</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">rjust</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="s1">&#39;000&#39;</span><span class="p">)</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'>    <span class="n">ip</span><span class="o">.</span><span class="n">each_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">join</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">print</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">line</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">1</span><span class="o">].</span><span class="n">to_i</span> <span class="o">%</span> <span class="vi">@width</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Lan</span><span class="o">.</span><span class="n">new</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenWrt]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/18/openwrt/"/>
    <updated>2017-08-18T05:36:34+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/18/openwrt</id>
    <content type="html"><![CDATA[<p><code>opkg update</code><br/>
<code>opkg install luci-i18n-base-zh-tw</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fake_mac]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/17/fake-mac/"/>
    <updated>2017-08-17T00:27:25+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/17/fake-mac</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#http://standards-oui.ieee.org/oui.txt</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">random_mac</span>
</span><span class='line'>  <span class="n">m</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">15</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">.</span><span class="n">to_s</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">.</span><span class="n">upcase</span><span class="p">}</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="n">m</span><span class="o">.</span><span class="n">sample</span><span class="p">}</span><span class="o">.</span><span class="n">join</span><span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">mac_address</span><span class="p">(</span><span class="n">co</span><span class="p">)</span>
</span><span class='line'>  <span class="n">mac_co</span> <span class="o">=</span> <span class="n">co</span><span class="o">.</span><span class="n">sample</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">mac_company</span> <span class="o">=</span> <span class="n">mac_co</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">mac</span> <span class="o">=</span> <span class="n">mac_co</span><span class="o">[</span><span class="mi">0</span><span class="o">]+</span><span class="n">random_mac</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">list</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">readlines</span><span class="p">(</span><span class="s1">&#39;oui.txt&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(.{8})\s*\(hex\)\W*(.*)\r/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">}</span><span class="o">.</span><span class="n">compact</span>
</span><span class='line'><span class="n">mac_address</span><span class="p">(</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">word</span> <span class="o">=</span> <span class="s2">&quot;D-link&quot;</span><span class="o">.</span><span class="n">downcase</span>
</span><span class='line'><span class="n">list</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">m</span><span class="p">,</span> <span class="n">c</span><span class="o">|</span> <span class="o">[</span><span class="n">m</span><span class="p">,</span><span class="n">c</span><span class="o">]</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">c</span><span class="o">.</span><span class="n">downcase</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/.*</span><span class="si">#{</span><span class="n">word</span><span class="si">}</span><span class="sr">.*/</span><span class="p">)}</span><span class="o">.</span><span class="n">compact</span>
</span><span class='line'><span class="n">mac_address</span><span class="p">(</span><span class="n">list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#dev = &quot;eth0&quot;</span>
</span><span class='line'><span class="c1">#`ifconfig #{dev} down`</span>
</span><span class='line'><span class="c1">#`macchanger -m #{mac} #{dev}`</span>
</span><span class='line'><span class="c1">#`ifconfig #{dev} up`</span>
</span><span class='line'><span class="c1">#`macchanger -s #{dev}`</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wifi-driver]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/16/wifi-driver/"/>
    <updated>2017-08-16T06:35:42+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/16/wifi-driver</id>
    <content type="html"><![CDATA[<p>TP-LINK Archer T4U driver</p>

<blockquote><blockquote><p>ref <a href="https://askubuntu.com/questions/802205/how-to-install-tp-link-archer-t4u-driver">https://askubuntu.com/questions/802205/how-to-install-tp-link-archer-t4u-driver</a></p></blockquote></blockquote>

<p>wget <a href="https://github.com/abperiasamy/rtl8812AU_8821AU_linux/archive/master.zip">https://github.com/abperiasamy/rtl8812AU_8821AU_linux/archive/master.zip</a>
unzip master.zip
cd rtl8812AU_8821AU_linux-master
make
make install
modprobe rtl8812au</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ssh]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/14/ssh/"/>
    <updated>2017-08-14T18:21:12+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/14/ssh</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">target</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">ip</span>  <span class="o">=</span> <span class="sb">`ifconfig | grep cast`</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/\d+\.\d+\.\d+\.\d+/</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">}</span>
</span><span class='line'><span class="n">lan</span> <span class="o">=</span> <span class="n">ip</span><span class="o">.</span><span class="n">map</span><span class="p">{</span><span class="o">|</span><span class="n">i</span><span class="o">|</span><span class="n">i</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(\d*\.\d*\.\d*\.)\d*/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">lan</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">11</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">lan</span>
</span><span class='line'>  <span class="nb">print</span> <span class="s2">&quot;----------</span><span class="se">\n</span><span class="s2">&gt; &quot;</span>
</span><span class='line'>  <span class="n">ch</span> <span class="o">=</span> <span class="no">STDIN</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>  <span class="n">lan</span> <span class="o">=</span> <span class="n">lan</span><span class="o">[</span><span class="n">ch</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">system</span> <span class="s2">&quot;/usr/bin/ssh </span><span class="si">#{</span><span class="o">[</span><span class="n">lan</span><span class="o">].</span><span class="n">join</span><span class="si">}#{</span><span class="n">target</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wifi-config]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/14/wifi-config/"/>
    <updated>2017-08-14T14:44:38+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/14/wifi-config</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#/etc/network/interfaces
</span><span class='line'>auto wlan0
</span><span class='line'>iface wlan0 inet static
</span><span class='line'>  address 192.168.0.201
</span><span class='line'>  netmask 255.255.255.0
</span><span class='line'>  gateway 192.168.0.1
</span><span class='line'>  wpa-driver wext
</span><span class='line'>  wpa-ssid SSID</span></code></pre></td></tr></table></div></figure>


<p><code>echo wpa-psk `wpa_passphrase SSID PASSWORDS | grep -E "\spsk=.*\"?" | cut -f 2 -d "=" ` &gt;&gt; /etc/network/interfaces</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#wifi.sh</span>
</span><span class='line'><span class="n">ssid</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">passwd</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">wpa</span> <span class="o">=</span> <span class="sb">`wpa_passphrase </span><span class="si">#{</span><span class="n">ssid</span><span class="si">}</span><span class="sb"> </span><span class="si">#{</span><span class="n">passwd</span><span class="si">}</span><span class="sb">`</span>
</span><span class='line'><span class="nb">exit</span> <span class="k">if</span> <span class="n">wpa</span> <span class="o">==</span> <span class="s2">&quot;Passphrase must be 8..63 characters</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">psk</span> <span class="o">=</span> <span class="n">wpa</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/\tpsk=(.*)/</span><span class="p">)</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'>
</span><span class='line'><span class="nb">system</span> <span class="s2">&quot;echo wpa-ssid </span><span class="si">#{</span><span class="n">ssid</span><span class="si">}</span><span class="s2"> &gt;&gt; /etc/network/interfaces&quot;</span>
</span><span class='line'><span class="nb">system</span> <span class="s2">&quot;echo wpa-psk </span><span class="si">#{</span><span class="n">psk</span><span class="si">}</span><span class="s2"> &gt;&gt; /etc/network/interfaces&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
