<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | icps]]></title>
  <link href="http://icps0610.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2017-08-16T17:24:38+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ssh]]></title>
    <link href="http://icps0610.github.io/blog/2017/08/14/ssh/"/>
    <updated>2017-08-14T18:21:12+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/08/14/ssh</id>
    <content type="html"><![CDATA[<pre><code class="ruby">target = ARGV[0]
ip  = `ifconfig | grep Bcast | cut -d " " -f 12 | cut -d ":" -f 2`
ip  = `ifconfig | grep inet | grep cast | cut -d " " -f 10` if ip == ""
lan = ip.split("\n").map{|i| i.scan(/(\d*\.\d*\.\d*\.)\d*/).join}

if lan.count &gt; 1
  puts lan
  print "----------\n&gt; "
  ch = STDIN.gets.to_i
  lan = lan[ch-1]
end
system "/usr/bin/ssh #{[lan].join}#{target}"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Line-notify]]></title>
    <link href="http://icps0610.github.io/blog/2017/06/23/line-notify/"/>
    <updated>2017-06-23T20:45:29+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/06/23/line-notify</id>
    <content type="html"><![CDATA[<pre><code class="ruby">line = "https://notify-api.line.me/api/notify"
to    = ARGV[0]
msg   = ARGV[1]
image = ARGV[2]

case to
when "me"
  token = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
end
if image and File.exist?(image)
  cmd = "curl -X POST -H 'Authorization: Bearer #{token}' -F 'message=#{msg}' -F 'imageFile=@#{image}' #{line}"
elsif image == nil
  cmd = "curl -X POST -H 'Authorization: Bearer #{token}' -F 'message=#{msg}' #{line}"
else
  cmd = "curl -X POST -H 'Authorization: Bearer #{token}' -F 'message=file cant find' #{line}"
end

system cmd
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Json]]></title>
    <link href="http://icps0610.github.io/blog/2017/06/19/json/"/>
    <updated>2017-06-19T19:51:53+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/06/19/json</id>
    <content type="html"><![CDATA[<pre><code class="ruby">require 'net/http'
require 'uri'
require 'json'

uri = URI.parse('http://www.example.com/sample.json')
json = Net::HTTP.get(uri)
result = JSON.parse(json)
puts result
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Calendar]]></title>
    <link href="http://icps0610.github.io/blog/2017/05/06/calendar/"/>
    <updated>2017-05-06T02:25:27+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/05/06/calendar</id>
    <content type="html"><![CDATA[<pre><code class="ruby">#!/usr/bin/env ruby
# encoding: utf-8
require 'rmagick'
require 'date'
class Calendar

  def initialize(input, output)
    today = Time.now
    year, month  = today.year, today.month
    @day  =  today.day
    @wday =  Date.new( year, month, 1 ).wday
    @days =  Date.new( year, month, -1).day
    #location
    jpg = `identify #{input}`.split(' ')[2].split('x')
    @x,@y = jpg[0].to_i-720 , jpg[1].to_i-1100
    run(input, output)
  end

  def text( color, text, fixX )
    @x_day||=0 ;  @y_day||=-1
    x, y = @x + @sizeX*2*(@x_day) + fixX, @y + @sizeY*(@y_day + 1)
    @text.fill = 'black'
    @text.annotate(@canvas, 0, 0, x, y, "#{text}" )
    @text.fill = "#{color}"
    @text.annotate(@canvas, 0, 0, x-5, y, "#{text}" )
  end

  def run(input, output)
    @canvas = Magick::ImageList.new.read(input)
    @text = Magick::Draw.new
    @text.pointsize = @sizeX = 32
    @sizeY = 42
    #title
    title = %w(SU MO TU WE TH FR SA)
    title.each_with_index do |t , index|
      fix =  @sizeX*2*index + @sizeX/4
      text( "grey", t, fix )
    end
    #days
    (0..@days-1).each do |d|
      @x_day = ( d + @wday ) % 7
      @y_day = ( d + @wday ) / 7
      d + 1 == @day ? color = "red" : color = "white"
      d &gt; 8 ? fix = @sizeX/2 : fix = @sizeX
      text( color, d+1, fix )
    end
    #output
    @canvas.write(output)
  end
end

Calendar.new(ARGV[0],ARGV[1])
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sum_of_array]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/14/sum-of-array/"/>
    <updated>2017-01-14T19:41:40+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/14/sum-of-array</id>
    <content type="html"><![CDATA[<p><code>array.inject(0){|sum,x| sum + x[0] }</code></p>
]]></content>
  </entry>
  
 </feed>
