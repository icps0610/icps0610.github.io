<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | icps]]></title>
  <link href="http://icps0610.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2018-04-22T01:14:09+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vba_excel_csv_and_use_ruby_read]]></title>
    <link href="http://icps0610.github.io/blog/2018/04/21/vba-excel-csv-and-use-ruby-read/"/>
    <updated>2018-04-21T19:43:25+08:00</updated>
    <id>http://icps0610.github.io/blog/2018/04/21/vba-excel-csv-and-use-ruby-read</id>
    <content type="html"><![CDATA[<p>excel vba => Unicode => Icov => utf-8</p>

<pre><code class="vba">#excel vba
Dim i As Integer
Dim WS_Count As Integer

file = "z:\workbook.xlsx"
csv = "z:\workbook.csv"

WS_Count = ActiveWorkbook.Worksheets.Count
For i = 1 To WS_Count
Dim ws As Worksheet

Set ws = ThisWorkbook.Worksheets(i)
    ws.Copy
    ActiveWorkbook.SaveAs Filename:=csv, _
        FileFormat:=xlUnicodeText
Next i
Application.DisplayAlerts = False
ActiveWorkbook.Close
Shell ("ruby X:\excel\send.rb")

Do
    If Dir(file) &lt;&gt; "" Then
        Exit Do
    End If
    DoEvents 'Prevents Excel from being unresponsive
    Application.Wait Now + TimeValue("0:00:01") 'wait for one second
Loop
Workbooks.Open file
</code></pre>

<pre><code class="ruby"># encoding: utf-8
require "net/ssh"
Net::SSH.start(host, user, :password =&gt; passwd ) do |ssh|
    puts ssh.exec! "ruby excel.rb"
end
</code></pre>

<pre><code class="ruby ">require 'csv'
require 'iconv'
file_path = "/tmp/workbook.csv"
f = IO.read(file_path)
Iconv.iconv('utf-8', 'unicode', f).join.split("\r\n")
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Net-ssh]]></title>
    <link href="http://icps0610.github.io/blog/2018/04/19/net-ssh/"/>
    <updated>2018-04-19T20:15:35+08:00</updated>
    <id>http://icps0610.github.io/blog/2018/04/19/net-ssh</id>
    <content type="html"><![CDATA[<p><code>Net::SSH::Authentication::AgentError: could not get identity count</code></p>

<p><code>eval "$(ssh-agent)";</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Holiday]]></title>
    <link href="http://icps0610.github.io/blog/2018/04/11/holiday/"/>
    <updated>2018-04-11T23:58:57+08:00</updated>
    <id>http://icps0610.github.io/blog/2018/04/11/holiday</id>
    <content type="html"><![CDATA[<h3><a href="http://www.319papago.idv.tw/holiday/2017-hr/2017_HR.html">http://www.319papago.idv.tw/holiday/2017-hr/2017_HR.html</a></h3>

<pre><code class="ruby">require 'rubyXL'

def holiday
    file_path = '/data/ruby/holiday/107.xlsx'
    workbook  = RubyXL::Parser.parse(file_path)
    worksheet =  workbook[0]
    data = []
    yl = [4, 16, 28, 42]
    xl = [1, 8, 15]
    hl = [5, 5, 6, 6]

    (0..3).each do |y|
        (0..2).each do |x|
            month = (0..(7 * hl[y]-1)).map do |i|
                cx = xl[x] + i % 7
                cy = yl[y] + (i / 7) * 2
                cell = worksheet[cy][cx]
                cell.fill_color if cell.value
            end.compact
            data &lt;&lt; month
        end
    end
    return data
end

def check_holiday(data, m, d)
    if data[m-1][d-1] == "FFFF99FF"
        return true
    else
        return false
    end
end

h = holiday
p check_holiday(h, 1, 1)
p check_holiday(h, 2, 15)
p check_holiday(h, 3, 11)
p check_holiday(h, 4, 5)
p check_holiday(h, 5, 27)
p check_holiday(h, 6, 18)
p check_holiday(h, 7, 15)
p check_holiday(h, 8, 26)
p check_holiday(h, 9, 24)
p check_holiday(h, 10, 10)
p check_holiday(h, 11, 10)
p check_holiday(h, 12, 31)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Download-gem]]></title>
    <link href="http://icps0610.github.io/blog/2018/01/24/download-gem/"/>
    <updated>2018-01-24T18:53:33+08:00</updated>
    <id>http://icps0610.github.io/blog/2018/01/24/download-gem</id>
    <content type="html"><![CDATA[<p><code>gem fetch [name]</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Execute_sql]]></title>
    <link href="http://icps0610.github.io/blog/2017/10/25/execute-sql/"/>
    <updated>2017-10-25T21:51:05+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/10/25/execute-sql</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>ref <a href="https://stackoverflow.com/questions/15408285/rails-3-execute-custom-sql-query-without-a-model">https://stackoverflow.com/questions/15408285/rails-3-execute-custom-sql-query-without-a-model</a>
``` ruby
ActiveRecord::Base.establish_connection({adapter: &lsquo;mysql2&rsquo;, encoding: &lsquo;utf8&rsquo;, database: DB, username: USER,password: PASSWD})</p></blockquote></blockquote>

<p>sql = &ldquo;SELECT * from users&rdquo;
@result = ActiveRecord::Base.connection.execute(sql);
@result.each do |r|
   puts r[&ldquo;name&rdquo;]
end
```</p>
]]></content>
  </entry>
  
 </feed>
