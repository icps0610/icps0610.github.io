<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | icps]]></title>
  <link href="http://icps0610.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2017-05-25T04:09:02+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Calendar]]></title>
    <link href="http://icps0610.github.io/blog/2017/05/06/calendar/"/>
    <updated>2017-05-06T02:25:27+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/05/06/calendar</id>
    <content type="html"><![CDATA[<pre><code class="ruby">#!/usr/bin/env ruby
# encoding: utf-8
require 'rmagick'
require 'date'
class Calendar

  def initialize(input, output)
    today = Time.now
    year, month  = today.year, today.month
    @day  =  today.day
    @wday =  Time.new( year, month, 1, 0, 0, 0, "+00:00").wday
    @days =  Date.new( year, month, -1).day
    #location
    jpg = `identify #{input}`.split(' ')[2].split('x')
    @x,@y = jpg[0].to_i-720 , jpg[1].to_i-1100
    run(input, output)
  end

  def text( color, text, fixX )
    @x_day||=0 ;  @y_day||=-1
    x, y = @x + @sizeX*2*(@x_day) + fixX, @y + @sizeY*(@y_day + 1)
    @text.fill = 'black'
    @text.annotate(@canvas, 0, 0, x, y, "#{text}" )
    @text.fill = "#{color}"
    @text.annotate(@canvas, 0, 0, x-5, y, "#{text}" )
  end

  def run(input, output)
    @canvas = Magick::ImageList.new.read(input)
    @text = Magick::Draw.new
    @text.pointsize = @sizeX = 32
    @sizeY = 42
    #title
    title = %w(SU MO TU WE TH FR SA)
    title.each_with_index do |t , index|
      fix =  @sizeX*2*index + @sizeX/4
      text( "grey", t, fix )
    end
    #days
    (0..@days-1).each do |d|
      @x_day = ( d + @wday ) % 7
      @y_day = ( d + @wday ) / 7
      d + 1 == @day ? color = "red" : color = "white"
      d &gt; 8 ? fix = @sizeX/2 : fix = @sizeX
      text( color, d+1, fix )
    end
    #output
    @canvas.write(output)
  end
end

Calendar.new(ARGV[0],ARGV[1])
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sum_of_array]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/14/sum-of-array/"/>
    <updated>2017-01-14T19:41:40+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/14/sum-of-array</id>
    <content type="html"><![CDATA[<p><code>array.inject(0){|sum,x| sum + x[0] }</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dupclicate_elements]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/14/dupclicate-elements/"/>
    <updated>2017-01-14T17:11:55+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/14/dupclicate-elements</id>
    <content type="html"><![CDATA[<p><a href="http://stackoverflow.com/questions/569694/count-duplicate-elements-in-ruby-array">http://stackoverflow.com/questions/569694/count-duplicate-elements-in-ruby-array</a></p>

<pre><code class="ruby  ">array = ["aa","bb","cc","bb","bb","cc"]
array.each_with_object(Hash.new(0)){|w,c|c[w]+=1}.each do |w,c|
    puts "#{w} #{c} times"
end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby_mysql]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/13/ruby-mysql/"/>
    <updated>2017-01-13T21:24:56+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/13/ruby-mysql</id>
    <content type="html"><![CDATA[<pre><code class="ruby">require 'active_record'
ActiveRecord::Base.establish_connection({
  adapter: 'mysql2',
  encoding: 'utf8',
  database: 'report',
  username: 'user',
  password: 'passwd'
})
class Event &lt; ActiveRecord::Base
end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Check_value]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/11/check-value/"/>
    <updated>2017-01-11T20:41:24+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/11/check-value</id>
    <content type="html"><![CDATA[<pre><code class="ruby">if defined?(value) &amp;&amp; (value != '')
    puts "yes"
else
    puts "nil"
end
</code></pre>
]]></content>
  </entry>
  
 </feed>
