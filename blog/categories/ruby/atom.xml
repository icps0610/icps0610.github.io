<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | icps]]></title>
  <link href="http://icps0610.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2016-12-29T01:36:19+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[四捨五入]]></title>
    <link href="http://icps0610.github.io/blog/2016/12/27/round/"/>
    <updated>2016-12-27T14:42:06+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/12/27/round</id>
    <content type="html"><![CDATA[<pre><code class="ruby">#!/usr/bin/env ruby
# encoding: utf-8
def n425(num)
    test = num.to_s.match(/(\d*)\.(\d{1})/)
    test[2].to_i &gt;= 5 ? test = test[1].to_i+1 : test = test[1].to_i
    num &lt; 0 ? test*(-1) : test
end

def n425(num)
    num.to_s.to_f.round
end 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rmagick]]></title>
    <link href="http://icps0610.github.io/blog/2016/11/21/rmagick/"/>
    <updated>2016-11-21T17:15:47+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/11/21/rmagick</id>
    <content type="html"><![CDATA[<p>apt-get install imagemagick libmagickwand-dev
gem install rmagick</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stack_level_too_deep]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/30/stack-level-too-deep/"/>
    <updated>2016-07-30T21:04:56+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/30/stack-level-too-deep</id>
    <content type="html"><![CDATA[<p>stack level too deep</p>

<p>export RUBY_THREAD_VM_STACK_SIZE=999999</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[File_list]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/26/file-list/"/>
    <updated>2016-07-26T19:20:57+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/26/file-list</id>
    <content type="html"><![CDATA[<pre><code class="ruby"># `find test  -type f | xargs ls`.split("\n")
def dir(file)
  file.each do |f|
    if File.directory?(f) == true
      file=`ls #{f}`.split("\n").map{|i|f+"\\"+i}
      dir(file)
    else
      `ls #{f}`.split("\n").each do |i|
        system "rm #{i}"
        system "touch #{i}"
      end
    end
  end
end
target="D:\\Thunder\\XLGameBox\\"
file=`ls #{target}`.split("\n").map{|i|target+i}
dir(file)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[因數分解]]></title>
    <link href="http://icps0610.github.io/blog/2016/07/11/factor/"/>
    <updated>2016-07-11T13:09:39+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/07/11/factor</id>
    <content type="html"><![CDATA[<pre><code class="ruby">def factor(n,f=2,result="")
  if n == 1 and (not result == "" and f &gt;= n/2)
    return result.chop
  elsif n%f == 0
    result+=f.to_s+"×"
    (n/f)%f == 0 ? factor(n/f,f,result) : factor(n/f,f+1,result)
  else
    factor(n,f+1,result)
  end
end

def reorganize(n)
  #Array項目內重複次數
  repeat=n.split("×").each_with_object(Hash.new(0)){|m,h|h[m]+= 1}
  return repeat.to_a.map{|x,y| "#{x}**#{y} × " }.join.chop.chop.chop
end
num = 29475
puts factor(num)
puts reorganize(factor(num))

# 3×3×5×5×131
# 3**2 × 5**2 × 131**1
</code></pre>
]]></content>
  </entry>
  
 </feed>
