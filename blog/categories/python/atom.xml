<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | icps]]></title>
  <link href="https://icps0610.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="https://icps0610.github.io/"/>
  <updated>2019-10-25T03:54:43+08:00</updated>
  <id>https://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Excel]]></title>
    <link href="https://icps0610.github.io/blog/2018/04/04/excel/"/>
    <updated>2018-04-04T16:39:18+08:00</updated>
    <id>https://icps0610.github.io/blog/2018/04/04/excel</id>
    <content type="html"><![CDATA[<h3>xlsxwriter</h3>

<h4>write</h4>

<pre><code class="python">#!/usr/bin/env python3
# -*- coding:utf-8 -*-
import xlsxwriter

def cell(x, y):
    return '%s%s' % ( chr(x+65), y+1)

workbook = xlsxwriter.Workbook('/tmp/text.xlsx')

worksheet = workbook.add_worksheet()
worksheet.write(0, 1, 'headings')
worksheet.write_url(0, 0, 'http://www.python.org/', tip='Click here')

cell_format =  workbook.add_format()
cell_format.set_num_format('0.00%')
worksheet.write(9, 0, 0.87, cell_format)   
workbook.close()
</code></pre>

<h3>#</h3>

<pre><code class="python">wb = load_workbook(filename=filename)
sheets = wb.sheetnames[0]
ws = wb[sheets]
rows = ws.rows
columns = ws.columns
channel = []
for row in rows:
    line = [col.value for col in row]
    channel.append({
        'name'                         : line[0],
        'monthly_sub_growth_percentage': line[1],
        'monthly_sub_growth'           : line[2],
        'subscribers'                  : line[3],
        'views_average'                : line[4],
        'video_count'                  : line[5],
        'monthly_video_count'          : line[6],
    })
</code></pre>

<h3>xlwt</h3>

<pre><code class="python">
#!/usr/bin/env python3
# -*- coding:utf-8 -*-
import xlrd, xlwt
wb = xlwt.Workbook(style_compression=2) 
# style_compression=2 解決styple太多造成錯誤
ex = wb.add_sheet('rank_u2')
ex.col(0).width = int(60*260)

style = xlwt.Formula('HYPERLINK("{}";"{}")'.format(link, name))
ex.write(0, 0, style)
#做連結
ex.write(idx, 1, gp, xlwt.easyxf(num_format_str='0.00%'))
#格式化
wb.save("test.xls")
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flatten]]></title>
    <link href="https://icps0610.github.io/blog/2017/11/24/list/"/>
    <updated>2017-11-24T15:58:10+08:00</updated>
    <id>https://icps0610.github.io/blog/2017/11/24/list</id>
    <content type="html"><![CDATA[<pre><code class="python">from itertools import chain
a = [[1, 2 ,3], [1, 2 ,3], None, []]
a = filter(None, a)
array = list(chain(*a))

print(array)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unix_time]]></title>
    <link href="https://icps0610.github.io/blog/2017/11/19/unix-time/"/>
    <updated>2017-11-19T21:05:36+08:00</updated>
    <id>https://icps0610.github.io/blog/2017/11/19/unix-time</id>
    <content type="html"><![CDATA[<pre><code class="python">import time
import datetime

u = "1284101485"
s = datetime.datetime.fromtimestamp( int(u)).strftime('%Y-%m-%d %H:%M:%S')
print(s)

u = time.mktime(datetime.datetime.strptime(s, '%Y-%m-%d %H:%M:%S').timetuple())
print(u)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Map_pthon]]></title>
    <link href="https://icps0610.github.io/blog/2017/11/14/map-pthon/"/>
    <updated>2017-11-14T01:30:33+08:00</updated>
    <id>https://icps0610.github.io/blog/2017/11/14/map-pthon</id>
    <content type="html"><![CDATA[<pre><code class="python">#python
s = [ "1", "2", "3" ]
print( map(int, s) )

#pthon3
s = [ "1", "2", "3" ]
print( listmap(int, s) )
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Argv]]></title>
    <link href="https://icps0610.github.io/blog/2017/10/22/argv/"/>
    <updated>2017-10-22T21:24:03+08:00</updated>
    <id>https://icps0610.github.io/blog/2017/10/22/argv</id>
    <content type="html"><![CDATA[<pre><code class="python">import sys, getopt
#args = " " . join(map(lambda s: '"%s"' % s if ' ' in s else s, sys.argv[2:]))

opts, args = getopt.getopt(sys.argv[1:], "hm:r:")
mode = ""
rating = ""
for op, value in opts:
  if op == "-m":
    mode = value
  elif op == "-r":
    rating = value
  else:
    print("-m mode -r rating")
    sys.exit()
print(mode)
print(rating)
</code></pre>
]]></content>
  </entry>
  
 </feed>
