<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ror | icps]]></title>
  <link href="http://icps0610.github.io/blog/categories/ror/atom.xml" rel="self"/>
  <link href="http://icps0610.github.io/"/>
  <updated>2017-01-13T09:49:51+08:00</updated>
  <id>http://icps0610.github.io/</id>
  <author>
    <name><![CDATA[icps]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Link_img]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/13/link-img/"/>
    <updated>2017-01-13T09:48:39+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/13/link-img</id>
    <content type="html"><![CDATA[<p>&lt;%= link_to(image_tag(&ldquo;path/to/image.png&rdquo;), image_path) %></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-hang]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/11/rails-hang/"/>
    <updated>2017-01-11T08:21:01+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/11/rails-hang</id>
    <content type="html"><![CDATA[<blockquote><p>ref <a href="http://stackoverflow.com/questions/31857365/rails-generate-commands-hang-when-trying-to-create-a-model">http://stackoverflow.com/questions/31857365/rails-generate-commands-hang-when-trying-to-create-a-model</a></p></blockquote>

<p><code>bundle install --binstubs</code></p>

<p><code>bundle binstubs rake</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chat]]></title>
    <link href="http://icps0610.github.io/blog/2017/01/11/chat/"/>
    <updated>2017-01-11T03:36:38+08:00</updated>
    <id>http://icps0610.github.io/blog/2017/01/11/chat</id>
    <content type="html"><![CDATA[<blockquote><p>ref <a href="https://www.rails365.net/articles/websocket-zhi-actioncable-ru-men-qi">https://www.rails365.net/articles/websocket-zhi-actioncable-ru-men-qi</a><br/>
ref <a href="https://www.pluralsight.com/guides/ruby-ruby-on-rails/creating-a-chat-using-rails-action-cable">https://www.pluralsight.com/guides/ruby-ruby-on-rails/creating-a-chat-using-rails-action-cable</a></p></blockquote>

<pre><code class="ruby">#Gemfile
gem 'redis'
</code></pre>

<pre><code class="ruby  ">#application.rb
module Default
  class Application &lt; Rails::Application
    config.action_cable.disable_request_forgery_protection = true 
    # config.action_cable.allowed_request_origins = ['http://192.168.0.200]
  end
end
</code></pre>

<pre><code class="ruby ">#config/routes.rb
mount ActionCable.server =&gt; '/cable'
</code></pre>

<p><code>rails g model message content:text name:string</code><br/>
<code>rake db:migrate</code><br/>
<code>rails g controller chats</code></p>

<pre><code class="ruby">#app/controllers/chats_controller.rb
def index
    @messages = Message.all
end
</code></pre>

<p>``` ruby</p>

<h1>app/views/rooms/index.erb</h1>

<div id="messages" class="messages">
  <%= render @messages %>
</div>


<p><form id="chat-from">
  <label>Say : </label>
  <input type="text" data-behavior="chat_speaker">
</form>
```</p>

<pre><code class="erb  ">#app/views/messages/_message.erb  
&lt;front id='message'&gt;&lt;b&gt;&lt;%= message.name %&gt;&lt;/b&gt; : &lt;font id="content"&gt;&lt;%= message.content %&gt;&lt;/font&gt;&lt;/font&gt;
</code></pre>

<p><code>rails g channel chat speak</code></p>

<pre><code class="ruby  ">#app/assets/javascripts/cable.coffee
//= require action_cable
//= require_self
//= require_tree ./channels
@App ||= {}
App.cable = ActionCable.createConsumer()
</code></pre>

<pre><code class="ruby  ">#app/views/layouts/application.html.erb
&lt;%= action_cable_meta_tag %&gt;
</code></pre>

<pre><code class="ruby">#app/channels/application_cable/connection.rb
module ApplicationCable
    class Connection &lt; ActionCable::Connection::Base
        identified_by :current_user

        def connect
            self.current_user = find_verified_user
            logger.add_tags 'ActionCable', current_user.email
        end

        protected

        def find_verified_user # this checks whether a user is authenticated with devise
            if verified_user = env['warden'].user
                verified_user
            else
                reject_unauthorized_connection
            end
        end
    end
end
</code></pre>

<pre><code class="ruby ">#app/channels/chat_channel.rb
class ChatChannel &lt; ApplicationCable::Channel
    def subscribed
        stream_from "chat_channel"
    end

    def unsubscribed
    end

    def speak(data)
        if not data['message'] == ""
            Message.create! content: data['message'], name: current_user.name
        end
    end
end
</code></pre>

<pre><code class="ruby">#app/assets/javascripts/channels/chat.coffee
App.chat = App.cable.subscriptions.create "ChatChannel",
    connected: -&gt;
        $('#messages').scrollTop( $('#messages')[0].scrollHeight )
  disconnected: -&gt;

  received: (data) -&gt;
    $('#messages').append(data['message'])
    $('#messages').scrollTop( $('#messages')[0].scrollHeight )

  speak: (message) -&gt;
    @perform 'speak', message: message

$(document).on 'keypress', '[data-behavior~=chat_speaker]', (event) -&gt;
  if event.keyCode is 13
    App.chat.speak event.target.value
    event.target.value = ""
    event.preventDefault()
</code></pre>

<p><code>rails g job MessageBroadcast</code></p>

<pre><code class="ruby">#app/jobs/message_broadcast_job.rb
class MessageBroadcastJob &lt; ApplicationJob
    queue_as :default

    def perform(message)
        ActionCable.server.broadcast 'chat_channel', message: render_message(message)
    end

    private
    def render_message(message)
        ApplicationController.renderer.render(partial: 'messages/message', locals: { message: message })
    end
end
</code></pre>

<pre><code class="ruby">#app/models/message.rb
class Message &lt; ApplicationRecord
    after_create_commit { MessageBroadcastJob.perform_later self }
end
</code></pre>

<pre><code class="scss">#scss
#messages {
  overflow: auto;
  position: relative;
  margin-left: 15px;
  height: 75vh;
  width: 90%;
  margin-bottom: 2vh;
}
#message {
  margin-left: 10%;
  font-size: 25px;
  line-height: 27px;
  position: relative;

}
#content {
  color: grey;
  font-size: 25px;
  line-height: 27px;
}

#chat-from {
  margin-left: 10%;
  margin-bottom:20px;
  position: relative;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QRrcode-heroku]]></title>
    <link href="http://icps0610.github.io/blog/2016/12/29/qrcode/"/>
    <updated>2016-12-29T01:28:11+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/12/29/qrcode</id>
    <content type="html"><![CDATA[<h4>Decoder - zxing</h4>

<p><code>heroku buildpacks:add --index 1 https://github.com/heroku/heroku-buildpack-apt</code><br/>
<code>echo cmake &gt; Aptfile</code><br/>
<code>git push heroku master</code></p>

<pre><code class="ruby">#!/usr/bin/env ruby
#Gemfile
gem 'zxing_cpp'

#controller.rb
require 'zxing'
ZXing.decode( filename )
</code></pre>

<h4>Encoder - rqrcode_png</h4>

<p><a href="https://github.com/DCarper/rqrcode_png">https://github.com/DCarper/rqrcode_png</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Current_page]]></title>
    <link href="http://icps0610.github.io/blog/2016/11/28/current_page/"/>
    <updated>2016-11-28T13:37:45+08:00</updated>
    <id>http://icps0610.github.io/blog/2016/11/28/current_page</id>
    <content type="html"><![CDATA[<blockquote><p>ref : <a href="https://kmywblog.wordpress.com/2015/10/13/">https://kmywblog.wordpress.com/2015/10/13/</a></p></blockquote>

<pre><code class="ruby"># app/helpers/application_helper
module ApplicationHelper

    def render_active(title,path)
        c = current_page?(path) ? "active" : ""
        content_tag(:li, link_to( title, path ), :class =&gt; c )
    end
end
</code></pre>

<pre><code class="ruby "># views
&lt;%= render_active( 'Home', root_path ) %&gt;
</code></pre>
]]></content>
  </entry>
  
 </feed>
